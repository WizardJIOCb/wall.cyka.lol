# Wall Social Platform - Nginx Configuration
# PHP-FPM FastCGI Configuration

server {
    listen 80;
    server_name localhost wall.cyka.lol;
    root /var/www/html/public;
    index index.html api.php;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Content Security Policy for AI-generated apps
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';" always;

    # Client body size for media uploads (50MB)
    client_max_body_size 50M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # Main application routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # API routing
    location /api/ {
        try_files $uri $uri/ /api.php?$query_string;
    }

    # Health check
    location = /health {
        try_files $uri /api.php?$query_string;
    }

    # PHP-FPM processing
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        
        # Increased timeouts for AI generation requests
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
    }

    # Server-Sent Events (SSE) endpoint for real-time updates
    location ~ ^/api/v1/(ai/jobs/[^/]+/status|queue/live|conversations/[^/]+/live)$ {
        proxy_pass http://php:9000;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSE requires these settings
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 24h;
        proxy_send_timeout 24h;
        chunked_transfer_encoding on;
    }

    # Static assets caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Media uploads directory
    location /uploads/ {
        alias /var/www/html/public/uploads/;
        expires 7d;
        add_header Cache-Control "public";
    }

    # AI-generated applications sandbox
    location /ai-apps/ {
        alias /var/www/html/public/ai-apps/;
        add_header Content-Security-Policy "sandbox allow-scripts allow-forms allow-modals allow-popups; default-src 'self' 'unsafe-inline' 'unsafe-eval';" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to sensitive files
    location ~ /\.(env|git|svn|htaccess|htpasswd)$ {
        deny all;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Nginx status (for monitoring)
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Logging
    access_log /var/log/nginx/wall_access.log;
    error_log /var/log/nginx/wall_error.log;
}
