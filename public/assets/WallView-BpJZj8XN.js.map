{"version":3,"file":"WallView-BpJZj8XN.js","sources":["../../frontend/src/components/ai/AIGenerationProgress.vue","../../frontend/src/views/WallView.vue"],"sourcesContent":["<template>\r\n  <div class=\"ai-generation-progress\">\r\n    <div class=\"progress-header\">\r\n      <div class=\"status-icon-container\">\r\n        <span class=\"status-icon\" :class=\"statusClass\">{{ statusIcon }}</span>\r\n      </div>\r\n      <div class=\"status-info\">\r\n        <h3>{{ statusTitle }}</h3>\r\n        <p class=\"status-subtitle\">{{ statusSubtitle }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Progress Bar -->\r\n    <div class=\"progress-bar-container\">\r\n      <div class=\"progress-bar\">\r\n        <div \r\n          class=\"progress-fill\" \r\n          :class=\"{ 'progress-pulsing': isGenerating }\"\r\n          :style=\"{ width: progress + '%' }\"\r\n        >\r\n          <span class=\"progress-text\" v-if=\"progress > 10\">{{ progress }}%</span>\r\n        </div>\r\n      </div>\r\n      <span class=\"progress-label\">{{ progress }}%</span>\r\n    </div>\r\n\r\n    <!-- Real-time Stats -->\r\n    <div v-if=\"isGenerating || status === 'completed'\" class=\"stats-grid\">\r\n      <!-- Tokens Generated -->\r\n      <div class=\"stat-card\" v-if=\"currentTokens > 0\">\r\n        <div class=\"stat-icon\">üî¢</div>\r\n        <div class=\"stat-content\">\r\n          <div class=\"stat-value\">{{ formatNumber(currentTokens) }}</div>\r\n          <div class=\"stat-label\">Tokens Generated</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Generation Speed -->\r\n      <div class=\"stat-card\" v-if=\"tokensPerSecond > 0\">\r\n        <div class=\"stat-icon\">‚ö°</div>\r\n        <div class=\"stat-content\">\r\n          <div class=\"stat-value\">{{ tokensPerSecond.toFixed(1) }}</div>\r\n          <div class=\"stat-label\">Tokens/sec</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Elapsed Time -->\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon\">‚è±Ô∏è</div>\r\n        <div class=\"stat-content\">\r\n          <div class=\"stat-value\">{{ formatTime(elapsedTime) }}</div>\r\n          <div class=\"stat-label\">Elapsed Time</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Estimated Remaining -->\r\n      <div class=\"stat-card\" v-if=\"estimatedRemaining > 0 && isGenerating\">\r\n        <div class=\"stat-icon\">‚è≥</div>\r\n        <div class=\"stat-content\">\r\n          <div class=\"stat-value\">{{ formatTime(estimatedRemaining) }}</div>\r\n          <div class=\"stat-label\">Est. Remaining</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Total Tokens (when completed) -->\r\n    <div v-if=\"status === 'completed' && totalTokens > 0\" class=\"completion-stats\">\r\n      <div class=\"completion-badge\">\r\n        <span class=\"badge-icon\">‚ú®</span>\r\n        <span class=\"badge-text\">Generation Complete!</span>\r\n      </div>\r\n      <div class=\"token-breakdown\">\r\n        <div class=\"token-item\">\r\n          <span class=\"token-label\">Input Tokens:</span>\r\n          <span class=\"token-value\">{{ formatNumber(promptTokens) }}</span>\r\n        </div>\r\n        <div class=\"token-item\">\r\n          <span class=\"token-label\">Output Tokens:</span>\r\n          <span class=\"token-value\">{{ formatNumber(completionTokens) }}</span>\r\n        </div>\r\n        <div class=\"token-item total\">\r\n          <span class=\"token-label\">Total:</span>\r\n          <span class=\"token-value\">{{ formatNumber(totalTokens) }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Error Message -->\r\n    <div v-if=\"status === 'failed' && errorMessage\" class=\"error-message\">\r\n      <span class=\"error-icon\">‚ö†Ô∏è</span>\r\n      <span>{{ errorMessage }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\r\n\r\nconst props = defineProps<{\r\n  jobId: string\r\n  autoStart?: boolean\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  complete: [data: any]\r\n  error: [error: string]\r\n}>()\r\n\r\n// State\r\nconst status = ref<'queued' | 'processing' | 'completed' | 'failed'>('queued')\r\nconst progress = ref(0)\r\nconst currentTokens = ref(0)\r\nconst tokensPerSecond = ref(0)\r\nconst elapsedTime = ref(0)\r\nconst estimatedRemaining = ref(0)\r\nconst promptTokens = ref(0)\r\nconst completionTokens = ref(0)\r\nconst totalTokens = ref(0)\r\nconst errorMessage = ref('')\r\n\r\nlet eventSource: EventSource | null = null\r\nlet timerInterval: number | null = null\r\nlet clientStartTime = 0\r\n\r\n// Computed\r\nconst isGenerating = computed(() => status.value === 'processing')\r\n\r\nconst statusIcon = computed(() => {\r\n  switch (status.value) {\r\n    case 'queued': return '‚è≥'\r\n    case 'processing': return 'ü§ñ'\r\n    case 'completed': return '‚úÖ'\r\n    case 'failed': return '‚ùå'\r\n    default: return '‚ùì'\r\n  }\r\n})\r\n\r\nconst statusClass = computed(() => {\r\n  return `status-${status.value}`\r\n})\r\n\r\nconst statusTitle = computed(() => {\r\n  switch (status.value) {\r\n    case 'queued': return 'Generation Queued'\r\n    case 'processing': return 'AI is Generating...'\r\n    case 'completed': return 'Generation Complete'\r\n    case 'failed': return 'Generation Failed'\r\n    default: return 'Unknown Status'\r\n  }\r\n})\r\n\r\nconst statusSubtitle = computed(() => {\r\n  if (status.value === 'processing' && currentTokens.value > 0) {\r\n    return `Generating content at ${tokensPerSecond.value.toFixed(1)} tokens/sec`\r\n  }\r\n  return ''\r\n})\r\n\r\n// Methods\r\nfunction formatNumber(num: number): string {\r\n  return num.toLocaleString()\r\n}\r\n\r\nfunction formatTime(ms: number): string {\r\n  const seconds = Math.floor(ms / 1000)\r\n  const minutes = Math.floor(seconds / 60)\r\n  const hours = Math.floor(minutes / 60)\r\n\r\n  if (hours > 0) {\r\n    return `${hours}h ${minutes % 60}m ${seconds % 60}s`\r\n  } else if (minutes > 0) {\r\n    return `${minutes}m ${seconds % 60}s`\r\n  } else {\r\n    return `${seconds}s`\r\n  }\r\n}\r\n\r\nfunction startTracking() {\r\n  if (eventSource) return\r\n\r\n  const apiUrl = import.meta.env.VITE_API_URL || 'http://localhost:8080'\r\n  const streamUrl = `${apiUrl}/api/v1/ai/generation/${props.jobId}/progress`\r\n\r\n  clientStartTime = Date.now()\r\n\r\n  // Start client-side timer for real-time elapsed time display\r\n  timerInterval = window.setInterval(() => {\r\n    if (status.value === 'processing') {\r\n      elapsedTime.value = Date.now() - clientStartTime\r\n    }\r\n  }, 100) // Update every 100ms for smooth display\r\n\r\n  // Connect to SSE stream\r\n  eventSource = new EventSource(streamUrl)\r\n\r\n  eventSource.addEventListener('progress', (event) => {\r\n    const data = JSON.parse(event.data)\r\n    \r\n    status.value = data.status\r\n    progress.value = data.progress || 0\r\n    currentTokens.value = data.current_tokens || 0\r\n    tokensPerSecond.value = data.tokens_per_second || 0\r\n    estimatedRemaining.value = data.estimated_remaining || 0\r\n    promptTokens.value = data.prompt_tokens || 0\r\n    completionTokens.value = data.completion_tokens || 0\r\n    totalTokens.value = data.total_tokens || 0\r\n\r\n    // Sync elapsed time with server (but continue using client timer for smoothness)\r\n    if (data.elapsed_time) {\r\n      const serverElapsed = data.elapsed_time\r\n      const clientElapsed = Date.now() - clientStartTime\r\n      \r\n      // If drift is significant, resync\r\n      if (Math.abs(serverElapsed - clientElapsed) > 1000) {\r\n        clientStartTime = Date.now() - serverElapsed\r\n      }\r\n    }\r\n  })\r\n\r\n  eventSource.addEventListener('complete', (event) => {\r\n    const data = JSON.parse(event.data)\r\n    \r\n    status.value = 'completed'\r\n    progress.value = 100\r\n    totalTokens.value = data.total_tokens || totalTokens.value\r\n    \r\n    if (data.elapsed_time) {\r\n      elapsedTime.value = data.elapsed_time\r\n    }\r\n\r\n    stopTracking()\r\n    emit('complete', data)\r\n  })\r\n\r\n  eventSource.addEventListener('error', (event) => {\r\n    let data: any = {}\r\n    try {\r\n      data = JSON.parse((event as any).data)\r\n    } catch (e) {\r\n      data = { error: 'Connection error' }\r\n    }\r\n\r\n    status.value = 'failed'\r\n    errorMessage.value = data.error || 'Unknown error occurred'\r\n    \r\n    stopTracking()\r\n    emit('error', errorMessage.value)\r\n  })\r\n\r\n  eventSource.onerror = () => {\r\n    console.error('SSE connection error')\r\n    // Don't immediately fail - might be a temporary network issue\r\n    // The server will timeout after 10 minutes if needed\r\n  }\r\n}\r\n\r\nfunction stopTracking() {\r\n  if (eventSource) {\r\n    eventSource.close()\r\n    eventSource = null\r\n  }\r\n\r\n  if (timerInterval) {\r\n    clearInterval(timerInterval)\r\n    timerInterval = null\r\n  }\r\n}\r\n\r\n// Lifecycle\r\nonMounted(() => {\r\n  if (props.autoStart !== false) {\r\n    startTracking()\r\n  }\r\n})\r\n\r\nonUnmounted(() => {\r\n  stopTracking()\r\n})\r\n\r\n// Expose methods for parent component\r\ndefineExpose({\r\n  startTracking,\r\n  stopTracking\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.ai-generation-progress {\r\n  background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);\r\n  border: 1px solid rgba(102, 126, 234, 0.2);\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.progress-header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.status-icon-container {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.status-icon {\r\n  font-size: 2.5rem;\r\n  display: inline-block;\r\n  animation: pulse 2s ease-in-out infinite;\r\n}\r\n\r\n.status-icon.status-processing {\r\n  animation: spin 2s linear infinite;\r\n}\r\n\r\n.status-icon.status-completed {\r\n  animation: bounce 0.5s ease-in-out;\r\n}\r\n\r\n@keyframes pulse {\r\n  0%, 100% { opacity: 1; }\r\n  50% { opacity: 0.7; }\r\n}\r\n\r\n@keyframes spin {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n@keyframes bounce {\r\n  0%, 100% { transform: scale(1); }\r\n  50% { transform: scale(1.2); }\r\n}\r\n\r\n.status-info h3 {\r\n  margin: 0;\r\n  font-size: 1.25rem;\r\n  color: var(--color-text-primary, #1a1a1a);\r\n}\r\n\r\n.status-subtitle {\r\n  margin: 0.25rem 0 0 0;\r\n  font-size: 0.875rem;\r\n  color: var(--color-text-secondary, #666);\r\n}\r\n\r\n.progress-bar-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.progress-bar {\r\n  flex: 1;\r\n  height: 32px;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 16px;\r\n  transition: width 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n}\r\n\r\n.progress-pulsing {\r\n  animation: progressPulse 1.5s ease-in-out infinite;\r\n}\r\n\r\n@keyframes progressPulse {\r\n  0%, 100% { opacity: 1; }\r\n  50% { opacity: 0.8; }\r\n}\r\n\r\n.progress-text {\r\n  color: white;\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.progress-label {\r\n  font-weight: 600;\r\n  color: var(--color-text-primary, #1a1a1a);\r\n  min-width: 45px;\r\n  text-align: right;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.stat-icon {\r\n  font-size: 1.75rem;\r\n}\r\n\r\n.stat-content {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.25rem;\r\n  font-weight: 700;\r\n  color: var(--color-primary, #667eea);\r\n  line-height: 1.2;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 0.75rem;\r\n  color: var(--color-text-secondary, #666);\r\n  margin-top: 0.25rem;\r\n}\r\n\r\n.completion-stats {\r\n  margin-top: 1.5rem;\r\n  padding-top: 1.5rem;\r\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.completion-badge {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 20px;\r\n  font-weight: 600;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.badge-icon {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n.token-breakdown {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n}\r\n\r\n.token-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.token-item.total {\r\n  margin-top: 0.5rem;\r\n  padding-top: 0.5rem;\r\n  border-top: 2px solid rgba(0, 0, 0, 0.1);\r\n  font-weight: 700;\r\n}\r\n\r\n.token-label {\r\n  color: var(--color-text-secondary, #666);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.token-value {\r\n  color: var(--color-primary, #667eea);\r\n  font-weight: 600;\r\n}\r\n\r\n.token-item.total .token-value {\r\n  font-size: 1.125rem;\r\n}\r\n\r\n.error-message {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 1rem;\r\n  background: rgba(248, 113, 113, 0.1);\r\n  border: 1px solid rgba(248, 113, 113, 0.3);\r\n  border-radius: 8px;\r\n  color: #dc2626;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.error-icon {\r\n  font-size: 1.25rem;\r\n  flex-shrink: 0;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .stats-grid {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  \r\n  .progress-bar-container {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .progress-label {\r\n    text-align: center;\r\n  }\r\n}\r\n</style>\r\n","<template>\n  <div class=\"wall-view\">\n    <div v-if=\"loading\" class=\"loading-container\">\n      <div class=\"spinner\"></div>\n      <p>Loading wall...</p>\n    </div>\n\n    <div v-else-if=\"error\" class=\"error-container\">\n      <h2>Error Loading Wall</h2>\n      <p>{{ error }}</p>\n      <button @click=\"$router.push('/')\" class=\"btn-primary\">Go Home</button>\n    </div>\n\n    <div v-else-if=\"wall\" class=\"wall-content\">\n      <!-- Wall Header -->\n      <div class=\"wall-header\">\n        <div class=\"wall-banner\" :style=\"bannerStyle\"></div>\n        <div class=\"wall-info\">\n          <div class=\"wall-avatar\">\n            <img :src=\"wall.owner_avatar || wall.avatar_url || '/assets/images/default-avatar.svg'\" :alt=\"wall.owner_username || wall.display_name\" />\n          </div>\n          <div class=\"wall-details\">\n            <h1 class=\"wall-title\">{{ wall.display_name }}</h1>\n            <p v-if=\"wall.owner_username\" class=\"wall-owner\">by @{{ wall.owner_username }}</p>\n            <p v-if=\"wall.description\" class=\"wall-description\">{{ wall.description }}</p>\n          </div>\n          <div class=\"wall-stats\">\n            <div class=\"stat\">\n              <span class=\"stat-value\">{{ wall.posts_count || 0 }}</span>\n              <span class=\"stat-label\">Posts</span>\n            </div>\n            <div class=\"stat\">\n              <span class=\"stat-value\">{{ wall.subscribers_count || 0 }}</span>\n              <span class=\"stat-label\">Followers</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Posts Feed -->\n      <div class=\"posts-section\">\n        <h2 class=\"section-title\">Posts</h2>\n        \n        <div v-if=\"loadingPosts\" class=\"loading-posts\">\n          <div class=\"spinner\"></div>\n          <p>Loading posts...</p>\n        </div>\n\n        <div v-else-if=\"posts.length === 0\" class=\"empty-state\">\n          <p>No posts yet on this wall.</p>\n          <button v-if=\"isOwnWall\" @click=\"createPost\" class=\"btn-primary\">Create First Post</button>\n        </div>\n\n        <div v-else class=\"posts-grid\">\n          <div v-for=\"post in posts\" :key=\"post.post_id\" class=\"post-card\" :class=\"{ 'ai-post': post.post_type === 'ai_app' }\">\n            <!-- AI Generation Real-time Progress (if AI post is generating) -->\n            <AIGenerationProgress \n              v-if=\"post.post_type === 'ai_app' && (post.ai_status === 'queued' || post.ai_status === 'processing') && post.job_id\"\n              :jobId=\"post.job_id\"\n              :auto-start=\"true\"\n              @complete=\"handleGenerationComplete(post)\"\n              @error=\"handleGenerationError(post, $event)\"\n            />\n            \n            <!-- Regular Post Content -->\n            <div class=\"post-header\">\n              <img :src=\"post.author_avatar || '/assets/images/default-avatar.svg'\" :alt=\"post.author_username\" class=\"post-avatar\" />\n              <div class=\"post-meta\">\n                <span class=\"post-author\">@{{ post.author_username }}</span>\n                <span class=\"post-time\">{{ formatDate(post.created_at) }}</span>\n              </div>\n            </div>\n            <div class=\"post-content\">\n              <div v-if=\"post.content_html\" v-html=\"post.content_html\"></div>\n              <p v-else>{{ post.content_text }}</p>\n            </div>\n            \n            <!-- AI Generated Content Preview (if completed) -->\n            <div v-if=\"post.post_type === 'ai_app' && post.ai_status === 'completed' && post.ai_content\" class=\"ai-content-preview\">\n              <div class=\"ai-preview-header\">\n                <span class=\"preview-icon\">‚ú®</span>\n                <h4>Generated Application</h4>\n              </div>\n              <div class=\"ai-preview-prompt\">\n                <strong>Prompt:</strong> {{ truncateText(post.ai_content.user_prompt, 150) }}\n              </div>\n              <div v-if=\"post.ai_content.html_content\" class=\"ai-preview-code\">\n                <pre>{{ truncateText(post.ai_content.html_content, 200) }}</pre>\n              </div>\n              <button @click=\"openAIModal(post)\" class=\"btn-open-ai\">\n                <span class=\"icon\">üëÅÔ∏è</span>\n                <span>Open Full Content</span>\n              </button>\n            </div>\n            <div v-if=\"post.media_attachments && post.media_attachments.length > 0\" class=\"post-media\">\n              <img v-for=\"media in post.media_attachments\" :key=\"media.attachment_id\" :src=\"media.file_url\" :alt=\"media.file_name\" />\n            </div>\n            <div class=\"post-actions\">\n              <button class=\"action-btn\">\n                <span class=\"icon\">üëç</span>\n                <span>{{ post.reaction_count || 0 }}</span>\n              </button>\n              <button class=\"action-btn\">\n                <span class=\"icon\">üí¨</span>\n                <span>{{ post.comment_count || 0 }}</span>\n              </button>\n              <button class=\"action-btn\">\n                <span class=\"icon\">üëÅ</span>\n                <span>{{ post.view_count || 0 }}</span>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Load More -->\n        <div v-if=\"hasMorePosts && !loadingPosts\" class=\"load-more\">\n          <button @click=\"loadMorePosts\" class=\"btn-secondary\">Load More</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- AI Content Modal -->\n  <Teleport to=\"body\">\n    <div v-if=\"showAIModal\" class=\"modal-overlay\" @click.self=\"closeAIModal\">\n      <div class=\"modal-content ai-modal\">\n        <div class=\"modal-header\">\n          <h2>‚ú® AI Generated Application</h2>\n          <button @click=\"closeAIModal\" class=\"btn-close\">√ó</button>\n        </div>\n        \n        <div v-if=\"selectedAIPost\" class=\"modal-body\">\n          <div class=\"ai-modal-section\">\n            <h3>üìù Prompt</h3>\n            <div class=\"ai-prompt-full\">\n              {{ selectedAIPost.ai_content?.user_prompt || 'No prompt available' }}\n            </div>\n          </div>\n          \n          <div class=\"ai-modal-section ai-stats\" v-if=\"selectedAIPost.ai_content\">\n            <h3>üìä Generation Stats</h3>\n            <div class=\"stats-grid\">\n              <div class=\"stat-item\">\n                <span class=\"stat-label\">Model:</span>\n                <span class=\"stat-value\">{{ selectedAIPost.ai_content.generation_model || 'Unknown' }}</span>\n              </div>\n              <div class=\"stat-item\" v-if=\"selectedAIPost.ai_content.generation_time\">\n                <span class=\"stat-label\">Time:</span>\n                <span class=\"stat-value\">{{ (selectedAIPost.ai_content.generation_time / 1000).toFixed(2) }}s</span>\n              </div>\n              <div class=\"stat-item\" v-if=\"selectedAIPost.ai_content.input_tokens\">\n                <span class=\"stat-label\">Input Tokens:</span>\n                <span class=\"stat-value\">{{ selectedAIPost.ai_content.input_tokens.toLocaleString() }}</span>\n              </div>\n              <div class=\"stat-item\" v-if=\"selectedAIPost.ai_content.output_tokens\">\n                <span class=\"stat-label\">Output Tokens:</span>\n                <span class=\"stat-value\">{{ selectedAIPost.ai_content.output_tokens.toLocaleString() }}</span>\n              </div>\n              <div class=\"stat-item\" v-if=\"selectedAIPost.ai_content.total_tokens\">\n                <span class=\"stat-label\">Total Tokens:</span>\n                <span class=\"stat-value\">{{ selectedAIPost.ai_content.total_tokens.toLocaleString() }}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"ai-modal-section\" v-if=\"selectedAIPost.ai_content?.html_content\">\n            <div class=\"section-header\">\n              <h3>üåê HTML</h3>\n              <button @click=\"copyToClipboard(selectedAIPost.ai_content.html_content, 'HTML')\" class=\"btn-copy-small\">üìã Copy</button>\n            </div>\n            <pre class=\"code-block\">{{ selectedAIPost.ai_content.html_content }}</pre>\n          </div>\n          \n          <div class=\"ai-modal-section\" v-if=\"selectedAIPost.ai_content?.css_content\">\n            <div class=\"section-header\">\n              <h3>üé® CSS</h3>\n              <button @click=\"copyToClipboard(selectedAIPost.ai_content.css_content, 'CSS')\" class=\"btn-copy-small\">üìã Copy</button>\n            </div>\n            <pre class=\"code-block\">{{ selectedAIPost.ai_content.css_content }}</pre>\n          </div>\n          \n          <div class=\"ai-modal-section\" v-if=\"selectedAIPost.ai_content?.js_content\">\n            <div class=\"section-header\">\n              <h3>‚ö° JavaScript</h3>\n              <button @click=\"copyToClipboard(selectedAIPost.ai_content.js_content, 'JavaScript')\" class=\"btn-copy-small\">üìã Copy</button>\n            </div>\n            <pre class=\"code-block\">{{ selectedAIPost.ai_content.js_content }}</pre>\n          </div>\n        </div>\n        \n        <div class=\"modal-footer\">\n          <button @click=\"downloadAIApp\" class=\"btn-primary\">\n            <span>üì•</span>\n            <span>Download Full App</span>\n          </button>\n          <button @click=\"closeAIModal\" class=\"btn-secondary\">Close</button>\n        </div>\n      </div>\n    </div>\n  </Teleport>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useAuthStore } from '@/stores/auth'\nimport apiClient from '@/services/api/client'\nimport AIGenerationProgress from '@/components/ai/AIGenerationProgress.vue'\n\nconst props = defineProps<{ wallId?: string }>()\n\nconst router = useRouter()\nconst route = useRoute()\nconst authStore = useAuthStore()\n\nconst loading = ref(true)\nconst loadingPosts = ref(false)\nconst error = ref<string | null>(null)\nconst wall = ref<any>(null)\nconst posts = ref<any[]>([])\nconst page = ref(1)\nconst limit = 20\nconst hasMorePosts = ref(true)\nlet pollInterval: any = null\n\nconst isOwnWall = computed(() => {\n  return wall.value && authStore.user && wall.value.user_id === authStore.user.id\n})\n\nconst bannerStyle = computed(() => {\n  if (wall.value?.theme) {\n    return { backgroundColor: wall.value.theme }\n  }\n  return { background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' }\n})\n\nconst formatDate = (dateString: string) => {\n  const date = new Date(dateString)\n  const now = new Date()\n  const diffMs = now.getTime() - date.getTime()\n  const diffMins = Math.floor(diffMs / 60000)\n  const diffHours = Math.floor(diffMs / 3600000)\n  const diffDays = Math.floor(diffMs / 86400000)\n\n  if (diffMins < 1) return 'just now'\n  if (diffMins < 60) return `${diffMins}m ago`\n  if (diffHours < 24) return `${diffHours}h ago`\n  if (diffDays < 7) return `${diffDays}d ago`\n  return date.toLocaleDateString()\n}\n\nconst loadWall = async () => {\n  try {\n    loading.value = true\n    error.value = null\n\n    let wallIdToFetch = props.wallId || route.params.wallId\n\n    // Check if we have a valid wallIdToFetch\n    if (!wallIdToFetch) {\n      throw new Error('No wall identifier provided')\n    }\n\n    let response;\n    \n    // Handle special case: /wall/me\n    if (wallIdToFetch === 'me') {\n      // Use the dedicated endpoint for current user's wall\n      response = await apiClient.get('/walls/me')\n    } else {\n      // Fetch wall data by ID or slug\n      response = await apiClient.get(`/walls/${wallIdToFetch}`)\n    }\n\n    if (response?.success && response?.data?.wall) {\n      wall.value = response.data.wall\n      await loadPosts()\n    } else {\n      throw new Error(response?.message || 'Wall not found')\n    }\n  } catch (err: any) {\n    console.error('Error loading wall:', err)\n    if (err.response?.status === 404) {\n      error.value = 'The requested wall could not be found. It may not exist or you may not have permission to view it.'\n    } else {\n      error.value = err.response?.data?.message || err.message || 'Failed to load wall'\n    }\n  } finally {\n    loading.value = false\n  }\n}\n\nconst loadPosts = async (isPolling = false) => {\n  if (!wall.value) return\n  \n  try {\n    // Don't show loading spinner when polling\n    if (!isPolling) {\n      loadingPosts.value = true\n    }\n    \n    const offset = (page.value - 1) * limit\n    const response = await apiClient.get(`/walls/${wall.value.wall_id}/posts?limit=${limit}&offset=${offset}`)\n    \n    if (response?.success && response?.data?.posts) {\n      const newPosts = response.data.posts\n      \n      if (page.value === 1) {\n        if (isPolling) {\n          // Update existing posts instead of replacing the entire array\n          updatePostsData(newPosts)\n        } else {\n          posts.value = newPosts\n        }\n      } else {\n        posts.value = [...posts.value, ...newPosts]\n      }\n      \n      hasMorePosts.value = newPosts.length === limit\n      \n      // Start polling if there are pending AI posts\n      checkForPendingAIPosts()\n    }\n  } catch (err: any) {\n    console.error('Error loading posts:', err)\n  } finally {\n    if (!isPolling) {\n      loadingPosts.value = false\n    }\n  }\n}\n\nconst updatePostsData = (newPosts: any[]) => {\n  // Create a map of new posts by post_id for quick lookup\n  const newPostsMap = new Map(newPosts.map(post => [post.post_id, post]))\n  \n  // Update existing posts with new data\n  posts.value.forEach((post, index) => {\n    const updatedPost = newPostsMap.get(post.post_id)\n    if (updatedPost) {\n      // Only update if AI status changed to avoid unnecessary re-renders\n      if (post.ai_status !== updatedPost.ai_status) {\n        posts.value[index] = { ...post, ...updatedPost }\n      }\n      newPostsMap.delete(post.post_id)\n    }\n  })\n  \n  // Add any new posts that weren't in the existing list\n  if (newPostsMap.size > 0) {\n    posts.value = [...Array.from(newPostsMap.values()), ...posts.value]\n  }\n}\n\nconst checkForPendingAIPosts = () => {\n  const hasPendingAI = posts.value.some(\n    post => post.post_type === 'ai_app' && \n           (post.ai_status === 'queued' || post.ai_status === 'processing')\n  )\n  \n  if (hasPendingAI) {\n    startPolling()\n  } else {\n    stopPolling()\n  }\n}\n\nconst startPolling = () => {\n  if (pollInterval) return\n  \n  pollInterval = setInterval(async () => {\n    await loadPosts(true) // Pass true to indicate polling\n  }, 3000) // Poll every 3 seconds\n}\n\nconst stopPolling = () => {\n  if (pollInterval) {\n    clearInterval(pollInterval)\n    pollInterval = null\n  }\n}\n\nconst loadMorePosts = () => {\n  page.value++\n  loadPosts()\n}\n\nconst createPost = () => {\n  // Navigate to post creation (to be implemented)\n  console.log('Create post functionality coming soon')\n}\n\n// Handle AI generation completion\nconst handleGenerationComplete = async (post: any) => {\n  console.log('Generation completed for post:', post.post_id)\n  // Reload posts to get the updated content\n  await loadPosts()\n  stopPolling()\n}\n\n// Handle AI generation error\nconst handleGenerationError = (post: any, errorMsg: string) => {\n  console.error('Generation failed for post:', post.post_id, errorMsg)\n  // Reload posts to reflect failed status\n  loadPosts()\n}\n\nconst getAIProgress = (status: string) => {\n  const progressMap: Record<string, number> = {\n    'queued': 10,\n    'processing': 60,\n    'completed': 100,\n    'failed': 0\n  }\n  return progressMap[status] || 0\n}\n\nconst getAIStatusText = (status: string) => {\n  const statusTextMap: Record<string, string> = {\n    'queued': 'Waiting in queue...',\n    'processing': 'Generating your application...',\n    'completed': 'Generation complete!',\n    'failed': 'Generation failed'\n  }\n  return statusTextMap[status] || 'Processing...'\n}\n\nconst truncateText = (text: string, maxLength: number) => {\n  if (!text) return ''\n  if (text.length <= maxLength) return text\n  return text.substring(0, maxLength) + '...'\n}\n\nconst selectedAIPost = ref<any>(null)\nconst showAIModal = ref(false)\n\nconst openAIModal = async (post: any) => {\n  try {\n    // Fetch full AI application data\n    const response: any = await apiClient.get(`/ai/apps/${post.ai_app_id}`)\n    \n    // Check if response has the expected structure\n    if (response?.success && response?.data?.app) {\n      selectedAIPost.value = {\n        ...post,\n        ai_content: response.data.app\n      }\n      showAIModal.value = true\n      // Lock body scroll\n      document.body.style.overflow = 'hidden'\n    }\n  } catch (err: any) {\n    console.error('Error loading AI content:', err)\n  }\n}\n\nconst closeAIModal = () => {\n  showAIModal.value = false\n  selectedAIPost.value = null\n  // Restore body scroll\n  document.body.style.overflow = ''\n}\n\nconst copyToClipboard = (text: string, label: string) => {\n  navigator.clipboard.writeText(text).then(() => {\n    // Successfully copied\n    console.log(`${label} copied to clipboard`)\n  }).catch(err => {\n    console.error('Failed to copy:', err)\n  })\n}\n\nconst downloadAIApp = () => {\n  if (!selectedAIPost.value?.ai_content) return\n  \n  const content = selectedAIPost.value.ai_content\n  const scriptOpen = '<script>'\n  const scriptClose = '<' + '/script>'\n  const bodyClose = '<' + '/body>'\n  const htmlClose = '<' + '/html>'\n  \n  const fullHTML = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>AI Generated App</title>\n  <style>\n${content.css_content || ''}\n  </style>\n</head>\n<body>\n${content.html_content || ''}\n  ${scriptOpen}\n${content.js_content || ''}\n  ${scriptClose}\n${bodyClose}\n${htmlClose}`\n  \n  const blob = new Blob([fullHTML], { type: 'text/html' })\n  const url = URL.createObjectURL(blob)\n  const a = document.createElement('a')\n  a.href = url\n  a.download = `ai-app-${selectedAIPost.value.post_id}.html`\n  a.click()\n  URL.revokeObjectURL(url)\n}\n\nonMounted(() => {\n  loadWall()\n})\n\nonUnmounted(() => {\n  stopPolling()\n  // Restore body scroll in case modal was open\n  document.body.style.overflow = ''\n})\n</script>\n\n<style scoped>\n.wall-view {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: var(--spacing-4);\n}\n\n.loading-container,\n.error-container {\n  text-align: center;\n  padding: var(--spacing-8);\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  margin: 0 auto var(--spacing-4);\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n.wall-header {\n  background: var(--color-bg-elevated);\n  border-radius: var(--radius-lg);\n  overflow: hidden;\n  margin-bottom: var(--spacing-6);\n  box-shadow: var(--shadow-md);\n}\n\n.wall-banner {\n  height: 200px;\n  width: 100%;\n}\n\n.wall-info {\n  padding: var(--spacing-6);\n  position: relative;\n}\n\n.wall-avatar {\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 4px solid var(--color-bg-elevated);\n  margin-top: -60px;\n  margin-bottom: var(--spacing-4);\n}\n\n.wall-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.wall-title {\n  font-size: 2rem;\n  font-weight: 700;\n  margin-bottom: var(--spacing-2);\n  color: var(--color-text-primary);\n}\n\n.wall-owner {\n  color: var(--color-text-secondary);\n  margin-bottom: var(--spacing-2);\n}\n\n.wall-description {\n  color: var(--color-text-secondary);\n  margin-bottom: var(--spacing-4);\n}\n\n.wall-stats {\n  display: flex;\n  gap: var(--spacing-6);\n}\n\n.stat {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.stat-value {\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: var(--color-primary);\n}\n\n.stat-label {\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n}\n\n.posts-section {\n  margin-top: var(--spacing-6);\n}\n\n.section-title {\n  font-size: 1.5rem;\n  font-weight: 700;\n  margin-bottom: var(--spacing-4);\n  color: var(--color-text-primary);\n}\n\n.loading-posts {\n  text-align: center;\n  padding: var(--spacing-8);\n}\n\n.empty-state {\n  text-align: center;\n  padding: var(--spacing-8);\n  background: var(--color-bg-elevated);\n  border-radius: var(--radius-lg);\n}\n\n.posts-grid {\n  display: grid;\n  gap: var(--spacing-4);\n}\n\n.post-card {\n  background: var(--color-bg-elevated);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-4);\n  box-shadow: var(--shadow-sm);\n  transition: box-shadow 0.2s;\n}\n\n.post-card:hover {\n  box-shadow: var(--shadow-md);\n}\n\n.post-header {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-3);\n  margin-bottom: var(--spacing-3);\n}\n\n.post-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.post-meta {\n  display: flex;\n  flex-direction: column;\n}\n\n.post-author {\n  font-weight: 600;\n  color: var(--color-text-primary);\n}\n\n.post-time {\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n}\n\n.post-content {\n  margin-bottom: var(--spacing-3);\n  line-height: 1.6;\n  color: var(--color-text-primary);\n}\n\n.post-media {\n  margin-bottom: var(--spacing-3);\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: var(--spacing-2);\n}\n\n.post-media img {\n  width: 100%;\n  border-radius: var(--radius-md);\n  object-fit: cover;\n}\n\n.post-actions {\n  display: flex;\n  gap: var(--spacing-4);\n  padding-top: var(--spacing-3);\n  border-top: 1px solid var(--color-border);\n}\n\n.action-btn {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-2);\n  padding: var(--spacing-2) var(--spacing-3);\n  background: transparent;\n  border: none;\n  border-radius: var(--radius-md);\n  cursor: pointer;\n  color: var(--color-text-secondary);\n  transition: background-color 0.2s;\n}\n\n.action-btn:hover {\n  background-color: var(--color-bg-secondary);\n  color: var(--color-text-primary);\n}\n\n.load-more {\n  text-align: center;\n  margin-top: var(--spacing-6);\n}\n\n.btn-primary,\n.btn-secondary {\n  padding: var(--spacing-3) var(--spacing-6);\n  border-radius: var(--radius-md);\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.btn-primary {\n  background: var(--color-primary);\n  color: white;\n  border: none;\n}\n\n.btn-primary:hover {\n  background: var(--color-primary-dark);\n}\n\n.btn-secondary {\n  background: transparent;\n  color: var(--color-primary);\n  border: 2px solid var(--color-primary);\n}\n\n.btn-secondary:hover {\n  background: var(--color-primary);\n  color: white;\n}\n\n/* AI Generation Status Styles */\n.post-card.ai-post {\n  border: 2px solid var(--color-primary);\n  background: linear-gradient(to bottom, var(--color-bg-elevated), var(--color-bg-primary));\n}\n\n.ai-generation-status {\n  padding: var(--spacing-4);\n  margin-bottom: var(--spacing-4);\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: var(--radius-md);\n  color: white;\n}\n\n.status-header {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-2);\n  margin-bottom: var(--spacing-3);\n}\n\n.status-icon {\n  font-size: 1.5rem;\n}\n\n.status-header h3 {\n  margin: 0;\n  font-size: 1.125rem;\n  font-weight: 600;\n}\n\n.progress-bar {\n  height: 8px;\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: var(--radius-full);\n  overflow: hidden;\n  margin-bottom: var(--spacing-2);\n}\n\n.progress-fill {\n  height: 100%;\n  background: white;\n  transition: width 0.5s ease;\n  box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n}\n\n.status-text {\n  margin: 0;\n  font-size: 0.875rem;\n  opacity: 0.9;\n}\n\n.ai-content-preview {\n  margin-top: var(--spacing-4);\n  padding: var(--spacing-4);\n  background: var(--color-bg-secondary);\n  border-radius: var(--radius-md);\n  border: 2px solid var(--color-primary);\n}\n\n.ai-preview-header {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-2);\n  margin-bottom: var(--spacing-3);\n}\n\n.preview-icon {\n  font-size: 1.25rem;\n}\n\n.ai-preview-header h4 {\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 600;\n  color: var(--color-text-primary);\n}\n\n.ai-preview-prompt {\n  padding: var(--spacing-3);\n  background: var(--color-bg-primary);\n  border-radius: var(--radius-sm);\n  margin-bottom: var(--spacing-3);\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n  line-height: 1.5;\n}\n\n.ai-preview-code {\n  margin-bottom: var(--spacing-3);\n  background: #1e1e1e;\n  border-radius: var(--radius-sm);\n  overflow: hidden;\n}\n\n.ai-preview-code pre {\n  margin: 0;\n  padding: var(--spacing-3);\n  color: #d4d4d4;\n  font-family: 'Courier New', monospace;\n  font-size: 0.75rem;\n  line-height: 1.4;\n  overflow-x: auto;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n\n.btn-open-ai {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--spacing-2);\n  padding: var(--spacing-3);\n  background: linear-gradient(135deg, var(--color-primary) 0%, #10b981 100%);\n  color: white;\n  border: none;\n  border-radius: var(--radius-md);\n  font-weight: 600;\n  cursor: pointer;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.btn-open-ai:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);\n}\n\n.modal-overlay {\n  position: fixed !important;\n  top: 0 !important;\n  left: 0 !important;\n  right: 0 !important;\n  bottom: 0 !important;\n  background: rgba(0, 0, 0, 0.85) !important;\n  display: flex !important;\n  align-items: center !important;\n  justify-content: center !important;\n  z-index: 9999 !important;\n  padding: var(--spacing-4) !important;\n  overflow-y: auto !important;\n  opacity: 1 !important;\n  visibility: visible !important;\n  pointer-events: auto !important;\n}\n\n.modal-content {\n  position: relative;\n  background: #ffffff !important;\n  border-radius: var(--radius-lg);\n  max-width: 900px;\n  width: 100%;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5) !important;\n  z-index: 10000;\n  pointer-events: auto !important;\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-5);\n  border-bottom: 1px solid var(--color-border);\n}\n\n.modal-header h2 {\n  margin: 0;\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: var(--color-text-primary);\n}\n\n.btn-close {\n  background: none;\n  border: none;\n  font-size: 2rem;\n  color: var(--color-text-secondary);\n  cursor: pointer;\n  padding: 0;\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-sm);\n  transition: background 0.2s;\n}\n\n.btn-close:hover {\n  background: var(--color-bg-secondary);\n}\n\n.modal-body {\n  padding: var(--spacing-5);\n  overflow-y: auto;\n  flex: 1;\n}\n\n.ai-modal-section {\n  margin-bottom: var(--spacing-6);\n}\n\n.ai-modal-section:last-child {\n  margin-bottom: 0;\n}\n\n.ai-modal-section h3 {\n  margin: 0 0 var(--spacing-3) 0;\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: var(--color-text-primary);\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-3);\n}\n\n.section-header h3 {\n  margin: 0;\n}\n\n.btn-copy-small {\n  padding: var(--spacing-2) var(--spacing-3);\n  background: var(--color-primary);\n  color: white;\n  border: none;\n  border-radius: var(--radius-sm);\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.btn-copy-small:hover {\n  background: var(--color-primary-dark);\n}\n\n.ai-prompt-full {\n  padding: var(--spacing-4);\n  background: var(--color-bg-secondary);\n  border-radius: var(--radius-md);\n  border-left: 4px solid var(--color-primary);\n  color: var(--color-text-primary);\n  line-height: 1.6;\n  font-size: 0.9375rem;\n}\n\n.code-block {\n  background: #1e1e1e;\n  color: #d4d4d4;\n  padding: var(--spacing-4);\n  border-radius: var(--radius-md);\n  overflow-x: auto;\n  font-family: 'Courier New', Consolas, Monaco, monospace;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  margin: 0;\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.modal-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--spacing-3);\n  padding: var(--spacing-5);\n  border-top: 1px solid var(--color-border);\n}\n\n.modal-footer .btn-primary,\n.modal-footer .btn-secondary {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-2);\n}\n\n/* AI Stats Section */\n.ai-stats .stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: var(--spacing-3);\n  padding: var(--spacing-4);\n  background: var(--color-bg-secondary);\n  border-radius: var(--radius-md);\n}\n\n.stat-item {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-1);\n}\n\n.stat-label {\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n  font-weight: 500;\n}\n\n.stat-value {\n  font-size: 1.125rem;\n  color: var(--color-text-primary);\n  font-weight: 600;\n}\n\n@media (max-width: 768px) {\n  .ai-stats .stats-grid {\n    grid-template-columns: 1fr;\n  }\n}\n\n@media (max-width: 768px) {\n  .wall-banner {\n    height: 120px;\n  }\n  \n  .wall-avatar {\n    width: 80px;\n    height: 80px;\n    margin-top: -40px;\n  }\n  \n  .wall-title {\n    font-size: 1.5rem;\n  }\n}\n</style>\n"],"names":["props","__props","emit","__emit","status","ref","progress","currentTokens","tokensPerSecond","elapsedTime","estimatedRemaining","promptTokens","completionTokens","totalTokens","errorMessage","eventSource","timerInterval","clientStartTime","isGenerating","computed","statusIcon","statusClass","statusTitle","statusSubtitle","formatNumber","num","formatTime","ms","seconds","minutes","hours","startTracking","streamUrl","event","data","serverElapsed","clientElapsed","stopTracking","onMounted","onUnmounted","__expose","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_normalizeClass","_hoisted_4","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_cache","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","limit","useRouter","route","useRoute","authStore","useAuthStore","loading","loadingPosts","error","wall","posts","page","hasMorePosts","pollInterval","isOwnWall","bannerStyle","_a","formatDate","dateString","date","diffMs","diffMins","diffHours","diffDays","loadWall","wallIdToFetch","response","apiClient","loadPosts","err","_b","_d","_c","isPolling","offset","newPosts","updatePostsData","checkForPendingAIPosts","newPostsMap","post","index","updatedPost","startPolling","stopPolling","loadMorePosts","createPost","handleGenerationComplete","handleGenerationError","errorMsg","truncateText","text","maxLength","selectedAIPost","showAIModal","openAIModal","closeAIModal","copyToClipboard","label","downloadAIApp","content","fullHTML","blob","url","a","$event","$router","_Fragment","_renderList","_createBlock","AIGenerationProgress","_createTextVNode","_hoisted_32","_hoisted_34","media","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_Teleport","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65"],"mappings":"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"}