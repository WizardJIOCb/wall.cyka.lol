{"version":3,"file":"NotificationsView-Dm-YPFiF.js","sources":["../../frontend/src/views/NotificationsView.vue"],"sourcesContent":["<template>\n  <div class=\"notifications-view\">\n    <div class=\"notifications-header\">\n      <h1>{{ $t('navigation.notifications') }}</h1>\n      <button \n        v-if=\"unreadCount > 0\" \n        @click=\"markAllAsRead\" \n        class=\"btn-secondary\"\n        :disabled=\"markingAllRead\"\n      >\n        {{ markingAllRead ? 'Marking...' : 'Mark all as read' }}\n      </button>\n    </div>\n\n    <!-- Filter Tabs -->\n    <div class=\"filter-tabs\">\n      <button\n        v-for=\"filter in filters\"\n        :key=\"filter.id\"\n        :class=\"['filter-tab', { active: activeFilter === filter.id }]\"\n        @click=\"activeFilter = filter.id\"\n      >\n        {{ filter.label }}\n        <span v-if=\"filter.id === 'unread' && unreadCount > 0\" class=\"badge\">{{ unreadCount }}</span>\n      </button>\n    </div>\n\n    <!-- Notifications List -->\n    <div class=\"notifications-container\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <div class=\"spinner\"></div>\n        <p>{{ $t('common.labels.loading') }}</p>\n      </div>\n\n      <div v-else-if=\"filteredNotifications.length === 0\" class=\"empty-state\">\n        <span class=\"empty-icon\">🔔</span>\n        <h2>No notifications</h2>\n        <p>{{ activeFilter === 'unread' ? 'You\\'re all caught up!' : 'No notifications to show' }}</p>\n      </div>\n\n      <div v-else class=\"notifications-list\">\n        <div\n          v-for=\"notification in filteredNotifications\"\n          :key=\"notification.notification_id\"\n          :class=\"['notification-item', { unread: !notification.is_read }]\"\n          @click=\"handleNotificationClick(notification)\"\n        >\n          <div class=\"notification-avatar\">\n            <img :src=\"notification.actor_avatar || '/assets/images/default-avatar.svg'\" :alt=\"notification.actor_username\" />\n            <span class=\"notification-type-icon\">{{ getNotificationIcon(notification.notification_type) }}</span>\n          </div>\n\n          <div class=\"notification-content\">\n            <div class=\"notification-text\">\n              <strong>{{ notification.actor_username }}</strong>\n              {{ getNotificationText(notification) }}\n            </div>\n            <div v-if=\"notification.target_preview\" class=\"notification-preview\">\n              {{ notification.target_preview }}\n            </div>\n            <div class=\"notification-time\">{{ formatTime(notification.created_at) }}</div>\n          </div>\n\n          <div class=\"notification-actions\">\n            <button\n              v-if=\"!notification.is_read\"\n              @click.stop=\"markAsRead(notification.notification_id)\"\n              class=\"mark-read-btn\"\n              title=\"Mark as read\"\n            >\n              ✓\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Load More -->\n      <div v-if=\"hasMore && !loading\" class=\"load-more\">\n        <button @click=\"loadMore\" class=\"btn-secondary\">{{ $t('common.buttons.loadMore') }}</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport apiClient from '@/services/api/client'\n\nconst router = useRouter()\n\nconst loading = ref(true)\nconst markingAllRead = ref(false)\nconst notifications = ref<any[]>([])\nconst unreadCount = ref(0)\nconst activeFilter = ref('all')\nconst page = ref(1)\nconst hasMore = ref(true)\n\nconst filters = [\n  { id: 'all', label: 'All' },\n  { id: 'unread', label: 'Unread' },\n  { id: 'mentions', label: 'Mentions' },\n  { id: 'reactions', label: 'Reactions' },\n  { id: 'comments', label: 'Comments' },\n  { id: 'follows', label: 'Follows' }\n]\n\nconst filteredNotifications = computed(() => {\n  if (activeFilter.value === 'all') {\n    return notifications.value\n  }\n  if (activeFilter.value === 'unread') {\n    return notifications.value.filter(n => !n.is_read)\n  }\n  return notifications.value.filter(n => n.notification_type === activeFilter.value.slice(0, -1))\n})\n\nconst getNotificationIcon = (type: string): string => {\n  const icons: Record<string, string> = {\n    follow: '👥',\n    reaction: '❤️',\n    comment: '💬',\n    reply: '💬',\n    mention: '@',\n    bricks: '🧱',\n    ai_complete: '🤖'\n  }\n  return icons[type] || '🔔'\n}\n\nconst getNotificationText = (notification: any): string => {\n  const texts: Record<string, string> = {\n    follow: 'started following you',\n    reaction: `reacted to your ${notification.target_type}`,\n    comment: 'commented on your post',\n    reply: 'replied to your comment',\n    mention: `mentioned you in a ${notification.target_type}`,\n    bricks: `sent you ${notification.content?.amount || 0} bricks`,\n    ai_complete: 'Your AI application is ready'\n  }\n  return texts[notification.notification_type] || 'sent you a notification'\n}\n\nconst formatTime = (dateString: string): string => {\n  const date = new Date(dateString)\n  const now = new Date()\n  const diffMs = now.getTime() - date.getTime()\n  const diffMins = Math.floor(diffMs / 60000)\n  const diffHours = Math.floor(diffMs / 3600000)\n  const diffDays = Math.floor(diffMs / 86400000)\n\n  if (diffMins < 1) return 'just now'\n  if (diffMins < 60) return `${diffMins}m ago`\n  if (diffHours < 24) return `${diffHours}h ago`\n  if (diffDays < 7) return `${diffDays}d ago`\n  return date.toLocaleDateString()\n}\n\nconst loadNotifications = async () => {\n  try {\n    loading.value = true\n    const limit = 20\n    const offset = (page.value - 1) * limit\n    \n    const response = await apiClient.get(`/notifications?limit=${limit}&offset=${offset}`)\n    if (response.data.success && response.data.data.notifications) {\n      if (page.value === 1) {\n        notifications.value = response.data.data.notifications\n      } else {\n        notifications.value = [...notifications.value, ...response.data.data.notifications]\n      }\n      hasMore.value = response.data.data.notifications.length === limit\n    }\n  } catch (err) {\n    console.error('Error loading notifications:', err)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst loadUnreadCount = async () => {\n  try {\n    const response = await apiClient.get('/notifications/unread-count')\n    if (response.data.success) {\n      unreadCount.value = response.data.data.unread_count || 0\n    }\n  } catch (err) {\n    console.error('Error loading unread count:', err)\n  }\n}\n\nconst markAsRead = async (notificationId: number) => {\n  try {\n    await apiClient.patch(`/notifications/${notificationId}/read`)\n    \n    // Update local state\n    const notification = notifications.value.find(n => n.notification_id === notificationId)\n    if (notification) {\n      notification.is_read = true\n      unreadCount.value = Math.max(0, unreadCount.value - 1)\n    }\n  } catch (err) {\n    console.error('Error marking notification as read:', err)\n  }\n}\n\nconst markAllAsRead = async () => {\n  try {\n    markingAllRead.value = true\n    await apiClient.post('/notifications/mark-all-read')\n    \n    // Update local state\n    notifications.value.forEach(n => {\n      n.is_read = true\n    })\n    unreadCount.value = 0\n  } catch (err) {\n    console.error('Error marking all as read:', err)\n  } finally {\n    markingAllRead.value = false\n  }\n}\n\nconst handleNotificationClick = async (notification: any) => {\n  // Mark as read\n  if (!notification.is_read) {\n    await markAsRead(notification.notification_id)\n  }\n\n  // Navigate to target\n  if (notification.target_type === 'post' && notification.target_id) {\n    router.push(`/post/${notification.target_id}`)\n  } else if (notification.target_type === 'wall' && notification.target_id) {\n    router.push(`/wall/${notification.target_id}`)\n  } else if (notification.target_type === 'user' && notification.actor_id) {\n    router.push(`/profile/${notification.actor_username}`)\n  } else if (notification.target_type === 'ai_app' && notification.target_id) {\n    router.push(`/ai/${notification.target_id}`)\n  }\n}\n\nconst loadMore = () => {\n  page.value++\n  loadNotifications()\n}\n\nonMounted(() => {\n  loadNotifications()\n  loadUnreadCount()\n})\n</script>\n\n<style scoped>\n.notifications-view {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: var(--spacing-6);\n}\n\n.notifications-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-6);\n}\n\n.notifications-header h1 {\n  font-size: 2rem;\n  font-weight: 700;\n  color: var(--color-text-primary);\n}\n\n.filter-tabs {\n  display: flex;\n  gap: var(--spacing-2);\n  margin-bottom: var(--spacing-6);\n  overflow-x: auto;\n  padding-bottom: var(--spacing-2);\n}\n\n.filter-tab {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-2);\n  padding: var(--spacing-3) var(--spacing-4);\n  background: var(--color-bg-elevated);\n  border: 2px solid transparent;\n  border-radius: var(--radius-full);\n  cursor: pointer;\n  font-weight: 600;\n  color: var(--color-text-secondary);\n  transition: all 0.2s;\n  white-space: nowrap;\n}\n\n.filter-tab:hover {\n  background: var(--color-bg-secondary);\n  color: var(--color-text-primary);\n}\n\n.filter-tab.active {\n  background: var(--color-primary);\n  color: white;\n  border-color: var(--color-primary);\n}\n\n.badge {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 20px;\n  height: 20px;\n  padding: 0 6px;\n  background: white;\n  color: var(--color-primary);\n  border-radius: var(--radius-full);\n  font-size: 0.75rem;\n  font-weight: 700;\n}\n\n.filter-tab.active .badge {\n  background: rgba(255, 255, 255, 0.9);\n}\n\n.notifications-container {\n  background: var(--color-bg-elevated);\n  border-radius: var(--radius-lg);\n  overflow: hidden;\n}\n\n.loading-container {\n  text-align: center;\n  padding: var(--spacing-8);\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  margin: 0 auto var(--spacing-4);\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n.empty-state {\n  text-align: center;\n  padding: var(--spacing-12);\n}\n\n.empty-icon {\n  font-size: 4rem;\n  display: block;\n  margin-bottom: var(--spacing-4);\n  opacity: 0.5;\n}\n\n.empty-state h2 {\n  font-size: 1.5rem;\n  font-weight: 700;\n  margin-bottom: var(--spacing-2);\n  color: var(--color-text-primary);\n}\n\n.empty-state p {\n  color: var(--color-text-secondary);\n}\n\n.notifications-list {\n  display: flex;\n  flex-direction: column;\n}\n\n.notification-item {\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  gap: var(--spacing-4);\n  padding: var(--spacing-4);\n  border-bottom: 1px solid var(--color-border);\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.notification-item:hover {\n  background: var(--color-bg-secondary);\n}\n\n.notification-item.unread {\n  background: rgba(99, 102, 241, 0.05);\n  border-left: 4px solid var(--color-primary);\n}\n\n.notification-item:last-child {\n  border-bottom: none;\n}\n\n.notification-avatar {\n  position: relative;\n  width: 48px;\n  height: 48px;\n}\n\n.notification-avatar img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.notification-type-icon {\n  position: absolute;\n  bottom: -4px;\n  right: -4px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--color-bg-elevated);\n  border: 2px solid var(--color-bg-elevated);\n  border-radius: 50%;\n  font-size: 0.75rem;\n}\n\n.notification-content {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-2);\n}\n\n.notification-text {\n  color: var(--color-text-primary);\n  line-height: 1.5;\n}\n\n.notification-text strong {\n  font-weight: 600;\n}\n\n.notification-preview {\n  color: var(--color-text-secondary);\n  font-size: 0.875rem;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.notification-time {\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n}\n\n.notification-actions {\n  display: flex;\n  align-items: center;\n}\n\n.mark-read-btn {\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--color-primary);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 1rem;\n}\n\n.mark-read-btn:hover {\n  background: var(--color-primary-dark);\n  transform: scale(1.1);\n}\n\n.load-more {\n  text-align: center;\n  padding: var(--spacing-6);\n  border-top: 1px solid var(--color-border);\n}\n\n.btn-secondary {\n  padding: var(--spacing-3) var(--spacing-6);\n  background: transparent;\n  color: var(--color-primary);\n  border: 2px solid var(--color-primary);\n  border-radius: var(--radius-md);\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.btn-secondary:hover:not(:disabled) {\n  background: var(--color-primary);\n  color: white;\n}\n\n.btn-secondary:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n@media (max-width: 768px) {\n  .notifications-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--spacing-4);\n  }\n  \n  .filter-tabs {\n    width: 100%;\n  }\n  \n  .notification-item {\n    grid-template-columns: auto 1fr;\n  }\n  \n  .notification-actions {\n    grid-column: 1 / -1;\n    justify-content: center;\n    margin-top: var(--spacing-2);\n  }\n}\n</style>\n"],"names":["router","useRouter","loading","ref","markingAllRead","notifications","unreadCount","activeFilter","page","hasMore","filters","filteredNotifications","computed","n","getNotificationIcon","type","getNotificationText","notification","_a","formatTime","dateString","date","diffMs","diffMins","diffHours","diffDays","loadNotifications","limit","offset","response","apiClient","err","loadUnreadCount","markAsRead","notificationId","markAllAsRead","handleNotificationClick","loadMore","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$t","_hoisted_3","_hoisted_4","_Fragment","_renderList","filter","_normalizeClass","$event","_hoisted_6","_toDisplayString","_hoisted_7","_hoisted_8","_hoisted_9","_cache","_hoisted_10","_hoisted_12","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_withModifiers","_hoisted_20","_hoisted_21"],"mappings":"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"}