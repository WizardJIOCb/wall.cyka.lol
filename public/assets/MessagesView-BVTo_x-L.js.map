{"version":3,"file":"MessagesView-BVTo_x-L.js","sources":["../../frontend/src/views/MessagesView.vue"],"sourcesContent":["<template>\n  <div class=\"messages-view\">\n    <div class=\"messages-container\">\n      <!-- Conversations List Panel -->\n      <div class=\"conversations-panel\">\n        <div class=\"conversations-header\">\n          <h2>{{ $t('navigation.messages') }}</h2>\n          <button @click=\"showNewMessageModal = true\" class=\"btn-new-message\">\n            <span class=\"icon\">‚úâÔ∏è</span>\n          </button>\n        </div>\n\n        <div class=\"search-bar\">\n          <input\n            v-model=\"conversationSearch\"\n            type=\"text\"\n            :placeholder=\"$t('common.actions.search') + ' conversations...'\"\n            class=\"search-input\"\n          />\n        </div>\n\n        <div v-if=\"loadingConversations\" class=\"loading-container\">\n          <div class=\"spinner\"></div>\n        </div>\n\n        <div v-else-if=\"filteredConversations.length === 0\" class=\"empty-conversations\">\n          <p>No conversations yet</p>\n        </div>\n\n        <div v-else class=\"conversations-list\">\n          <div\n            v-for=\"conversation in filteredConversations\"\n            :key=\"conversation.conversation_id\"\n            :class=\"['conversation-item', { active: activeConversationId === conversation.conversation_id }]\"\n            @click=\"selectConversation(conversation.conversation_id)\"\n          >\n            <div class=\"conversation-avatar\">\n              <img\n                :src=\"conversation.participant_avatar || '/assets/images/default-avatar.svg'\"\n                :alt=\"conversation.participant_name\"\n              />\n              <span v-if=\"conversation.is_online\" class=\"online-indicator\"></span>\n            </div>\n\n            <div class=\"conversation-info\">\n              <div class=\"conversation-name\">{{ conversation.participant_name }}</div>\n              <div class=\"conversation-preview\">{{ conversation.last_message || 'No messages' }}</div>\n            </div>\n\n            <div class=\"conversation-meta\">\n              <span class=\"conversation-time\">{{ formatTime(conversation.updated_at) }}</span>\n              <span v-if=\"conversation.unread_count > 0\" class=\"unread-badge\">\n                {{ conversation.unread_count }}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Active Conversation Panel -->\n      <div class=\"conversation-panel\">\n        <div v-if=\"!activeConversation\" class=\"no-conversation\">\n          <div class=\"empty-icon\">üí¨</div>\n          <h3>Select a conversation</h3>\n          <p>Choose a conversation from the list to start messaging</p>\n        </div>\n\n        <template v-else>\n          <!-- Conversation Header -->\n          <div class=\"conversation-header\">\n            <div class=\"header-info\">\n              <img\n                :src=\"activeConversation.participant_avatar || '/assets/images/default-avatar.svg'\"\n                :alt=\"activeConversation.participant_name\"\n                class=\"participant-avatar\"\n              />\n              <div class=\"participant-details\">\n                <div class=\"participant-name\">{{ activeConversation.participant_name }}</div>\n                <div class=\"participant-status\">\n                  {{ activeConversation.is_online ? 'Online' : 'Offline' }}\n                  <span v-if=\"isTyping\" class=\"typing-indicator\"> - typing...</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"header-actions\">\n              <button @click=\"viewProfile\" class=\"btn-icon\" title=\"View Profile\">\n                <span>üë§</span>\n              </button>\n              <button @click=\"deleteConversation\" class=\"btn-icon\" title=\"Delete Conversation\">\n                <span>üóëÔ∏è</span>\n              </button>\n            </div>\n          </div>\n\n          <!-- Messages Thread -->\n          <div ref=\"messagesContainer\" class=\"messages-thread\">\n            <div v-if=\"loadingMessages\" class=\"loading-container\">\n              <div class=\"spinner\"></div>\n            </div>\n\n            <div v-else-if=\"messages.length === 0\" class=\"empty-messages\">\n              <p>No messages yet. Start the conversation!</p>\n            </div>\n\n            <div v-else class=\"messages-list\">\n              <div\n                v-for=\"message in messages\"\n                :key=\"message.message_id\"\n                :class=\"['message-item', { own: message.is_own }]\"\n              >\n                <img\n                  v-if=\"!message.is_own\"\n                  :src=\"activeConversation.participant_avatar || '/assets/images/default-avatar.svg'\"\n                  :alt=\"activeConversation.participant_name\"\n                  class=\"message-avatar\"\n                />\n\n                <div class=\"message-bubble\">\n                  <div class=\"message-text\">{{ message.message_text }}</div>\n                  <div v-if=\"message.attachment_url\" class=\"message-attachment\">\n                    <img :src=\"message.attachment_url\" alt=\"Attachment\" class=\"attachment-image\" />\n                  </div>\n                  <div class=\"message-time\">\n                    {{ formatMessageTime(message.created_at) }}\n                    <span v-if=\"message.edited_at\" class=\"edited-label\">(edited)</span>\n                  </div>\n                </div>\n              </div>\n\n              <div v-if=\"isTyping\" class=\"typing-bubble\">\n                <div class=\"typing-dots\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Message Input -->\n          <div class=\"message-input-container\">\n            <button @click=\"attachFile\" class=\"btn-attach\" title=\"Attach File\">\n              <span>üìé</span>\n            </button>\n\n            <textarea\n              v-model=\"messageText\"\n              @keydown.enter.exact.prevent=\"sendMessage\"\n              @input=\"handleTyping\"\n              placeholder=\"Type a message...\"\n              class=\"message-input\"\n              rows=\"1\"\n            ></textarea>\n\n            <button @click=\"sendMessage\" :disabled=\"!messageText.trim()\" class=\"btn-send\">\n              <span>üì§</span>\n            </button>\n          </div>\n        </template>\n      </div>\n    </div>\n\n    <!-- New Message Modal -->\n    <div v-if=\"showNewMessageModal\" class=\"modal-overlay\" @click=\"showNewMessageModal = false\">\n      <div class=\"modal-content\" @click.stop>\n        <div class=\"modal-header\">\n          <h3>New Message</h3>\n          <button @click=\"showNewMessageModal = false\" class=\"btn-close\">√ó</button>\n        </div>\n        <div class=\"modal-body\">\n          <input\n            v-model=\"newMessageUsername\"\n            type=\"text\"\n            placeholder=\"Enter username...\"\n            class=\"username-input\"\n          />\n        </div>\n        <div class=\"modal-footer\">\n          <button @click=\"showNewMessageModal = false\" class=\"btn-secondary\">Cancel</button>\n          <button @click=\"startNewConversation\" class=\"btn-primary\">Start</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, onUnmounted, nextTick, watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useAuthStore } from '@/stores/auth'\nimport apiClient from '@/services/api/client'\n\nconst props = defineProps<{ conversationId?: string }>()\n\nconst route = useRoute()\nconst router = useRouter()\nconst authStore = useAuthStore()\n\nconst conversations = ref<any[]>([])\nconst messages = ref<any[]>([])\nconst activeConversationId = ref<number | null>(null)\nconst conversationSearch = ref('')\nconst messageText = ref('')\nconst loadingConversations = ref(true)\nconst loadingMessages = ref(false)\nconst isTyping = ref(false)\nconst showNewMessageModal = ref(false)\nconst newMessageUsername = ref('')\nconst messagesContainer = ref<HTMLElement | null>(null)\nlet pollInterval: any = null\nlet typingTimeout: any = null\n\nconst filteredConversations = computed(() => {\n  if (!conversationSearch.value) return conversations.value\n  \n  const search = conversationSearch.value.toLowerCase()\n  return conversations.value.filter(c =>\n    c.participant_name.toLowerCase().includes(search) ||\n    c.last_message?.toLowerCase().includes(search)\n  )\n})\n\nconst activeConversation = computed(() => {\n  if (!activeConversationId.value) return null\n  return conversations.value.find(c => c.conversation_id === activeConversationId.value)\n})\n\nconst formatTime = (dateString: string) => {\n  const date = new Date(dateString)\n  const now = new Date()\n  const diffMs = now.getTime() - date.getTime()\n  const diffMins = Math.floor(diffMs / 60000)\n  const diffHours = Math.floor(diffMs / 3600000)\n  const diffDays = Math.floor(diffMs / 86400000)\n\n  if (diffMins < 1) return 'now'\n  if (diffMins < 60) return `${diffMins}m`\n  if (diffHours < 24) return `${diffHours}h`\n  if (diffDays === 1) return 'yesterday'\n  if (diffDays < 7) return `${diffDays}d`\n  return date.toLocaleDateString()\n}\n\nconst formatMessageTime = (dateString: string) => {\n  const date = new Date(dateString)\n  return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n}\n\nconst loadConversations = async () => {\n  try {\n    loadingConversations.value = true\n    const response = await apiClient.get('/conversations')\n    \n    if (response.data.success && response.data.data.conversations) {\n      conversations.value = response.data.data.conversations\n    }\n  } catch (err) {\n    console.error('Error loading conversations:', err)\n  } finally {\n    loadingConversations.value = false\n  }\n}\n\nconst loadMessages = async () => {\n  if (!activeConversationId.value) return\n\n  try {\n    loadingMessages.value = true\n    const response = await apiClient.get(`/conversations/${activeConversationId.value}/messages`)\n    \n    if (response.data.success && response.data.data.messages) {\n      messages.value = response.data.data.messages.map((msg: any) => ({\n        ...msg,\n        is_own: msg.sender_id === authStore.user?.user_id\n      }))\n      \n      await nextTick()\n      scrollToBottom()\n      markAsRead()\n    }\n  } catch (err) {\n    console.error('Error loading messages:', err)\n  } finally {\n    loadingMessages.value = false\n  }\n}\n\nconst selectConversation = (conversationId: number) => {\n  activeConversationId.value = conversationId\n  router.push(`/messages/${conversationId}`)\n  loadMessages()\n}\n\nconst sendMessage = async () => {\n  if (!messageText.value.trim() || !activeConversationId.value) return\n\n  try {\n    const response = await apiClient.post(`/conversations/${activeConversationId.value}/messages`, {\n      message_text: messageText.value.trim()\n    })\n\n    if (response.data.success && response.data.data.message) {\n      const newMessage = {\n        ...response.data.data.message,\n        is_own: true\n      }\n      messages.value.push(newMessage)\n      messageText.value = ''\n      \n      await nextTick()\n      scrollToBottom()\n      \n      // Update conversation last message\n      const conv = conversations.value.find(c => c.conversation_id === activeConversationId.value)\n      if (conv) {\n        conv.last_message = newMessage.message_text\n        conv.updated_at = newMessage.created_at\n      }\n    }\n  } catch (err: any) {\n    alert(err.response?.data?.message || 'Failed to send message')\n  }\n}\n\nconst handleTyping = () => {\n  if (!activeConversationId.value) return\n\n  // Send typing indicator\n  apiClient.post(`/conversations/${activeConversationId.value}/typing`)\n\n  // Clear existing timeout\n  if (typingTimeout) {\n    clearTimeout(typingTimeout)\n  }\n\n  // Set new timeout\n  typingTimeout = setTimeout(() => {\n    // Typing stopped\n  }, 2000)\n}\n\nconst markAsRead = async () => {\n  if (!activeConversationId.value) return\n\n  try {\n    await apiClient.patch(`/conversations/${activeConversationId.value}/read`)\n    \n    // Update local state\n    const conv = conversations.value.find(c => c.conversation_id === activeConversationId.value)\n    if (conv) {\n      conv.unread_count = 0\n    }\n  } catch (err) {\n    console.error('Error marking as read:', err)\n  }\n}\n\nconst scrollToBottom = () => {\n  if (messagesContainer.value) {\n    messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight\n  }\n}\n\nconst startNewConversation = async () => {\n  if (!newMessageUsername.value.trim()) return\n\n  try {\n    const response = await apiClient.post('/conversations', {\n      participant_username: newMessageUsername.value.trim()\n    })\n\n    if (response.data.success && response.data.data.conversation) {\n      const newConv = response.data.data.conversation\n      conversations.value.unshift(newConv)\n      selectConversation(newConv.conversation_id)\n      showNewMessageModal.value = false\n      newMessageUsername.value = ''\n    }\n  } catch (err: any) {\n    alert(err.response?.data?.message || 'Failed to start conversation')\n  }\n}\n\nconst deleteConversation = async () => {\n  if (!activeConversationId.value || !confirm('Delete this conversation?')) return\n\n  try {\n    await apiClient.delete(`/conversations/${activeConversationId.value}`)\n    \n    conversations.value = conversations.value.filter(c => c.conversation_id !== activeConversationId.value)\n    activeConversationId.value = null\n    messages.value = []\n  } catch (err: any) {\n    alert(err.response?.data?.message || 'Failed to delete conversation')\n  }\n}\n\nconst viewProfile = () => {\n  if (activeConversation.value) {\n    router.push(`/profile/${activeConversation.value.participant_username}`)\n  }\n}\n\nconst attachFile = () => {\n  console.log('File attachment coming soon')\n}\n\nconst startPolling = () => {\n  if (pollInterval) return\n\n  pollInterval = setInterval(async () => {\n    if (activeConversationId.value) {\n      // Poll for new messages\n      const lastMessageId = messages.value[messages.value.length - 1]?.message_id\n      try {\n        const response = await apiClient.get(\n          `/conversations/${activeConversationId.value}/messages?after=${lastMessageId || 0}`\n        )\n        \n        if (response.data.success && response.data.data.messages) {\n          const newMessages = response.data.data.messages.map((msg: any) => ({\n            ...msg,\n            is_own: msg.sender_id === authStore.user?.user_id\n          }))\n          \n          if (newMessages.length > 0) {\n            messages.value.push(...newMessages)\n            await nextTick()\n            scrollToBottom()\n            markAsRead()\n          }\n        }\n      } catch (err) {\n        console.error('Error polling messages:', err)\n      }\n\n      // Check typing status\n      try {\n        const response = await apiClient.get(`/conversations/${activeConversationId.value}/typing`)\n        if (response.data.success && response.data.data.typing_users) {\n          isTyping.value = response.data.data.typing_users.length > 0\n        }\n      } catch (err) {\n        console.error('Error checking typing status:', err)\n      }\n    }\n  }, 3000)\n}\n\nconst stopPolling = () => {\n  if (pollInterval) {\n    clearInterval(pollInterval)\n    pollInterval = null\n  }\n}\n\nwatch(() => props.conversationId, (newId) => {\n  if (newId) {\n    activeConversationId.value = parseInt(newId)\n    loadMessages()\n  }\n})\n\nonMounted(() => {\n  loadConversations()\n  \n  if (props.conversationId) {\n    activeConversationId.value = parseInt(props.conversationId)\n    loadMessages()\n  }\n  \n  startPolling()\n})\n\nonUnmounted(() => {\n  stopPolling()\n  if (typingTimeout) {\n    clearTimeout(typingTimeout)\n  }\n})\n</script>\n\n<style scoped>\n.messages-view {\n  height: calc(100vh - 80px);\n  padding: 0;\n}\n\n.messages-container {\n  display: grid;\n  grid-template-columns: 350px 1fr;\n  height: 100%;\n  background: var(--color-bg-primary);\n}\n\n.conversations-panel {\n  background: var(--color-bg-elevated);\n  border-right: 2px solid var(--color-border);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.conversations-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-4);\n  border-bottom: 2px solid var(--color-border);\n}\n\n.conversations-header h2 {\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: var(--color-text-primary);\n}\n\n.btn-new-message {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--color-primary);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  font-size: 1.25rem;\n  transition: all 0.2s;\n}\n\n.btn-new-message:hover {\n  transform: scale(1.1);\n}\n\n.search-bar {\n  padding: var(--spacing-4);\n  border-bottom: 1px solid var(--color-border);\n}\n\n.search-input {\n  width: 100%;\n  padding: var(--spacing-3);\n  border: 2px solid var(--color-border);\n  border-radius: var(--radius-md);\n  background: var(--color-bg-primary);\n  color: var(--color-text-primary);\n}\n\n.conversations-list {\n  flex: 1;\n  overflow-y: auto;\n}\n\n.conversation-item {\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  gap: var(--spacing-3);\n  padding: var(--spacing-4);\n  border-bottom: 1px solid var(--color-border);\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.conversation-item:hover {\n  background: var(--color-bg-secondary);\n}\n\n.conversation-item.active {\n  background: var(--color-primary);\n  color: white;\n}\n\n.conversation-item.active .conversation-name,\n.conversation-item.active .conversation-preview,\n.conversation-item.active .conversation-time {\n  color: white;\n}\n\n.conversation-avatar {\n  position: relative;\n  width: 48px;\n  height: 48px;\n}\n\n.conversation-avatar img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.online-indicator {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 12px;\n  height: 12px;\n  background: #10b981;\n  border: 2px solid var(--color-bg-elevated);\n  border-radius: 50%;\n}\n\n.conversation-info {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-1);\n  min-width: 0;\n}\n\n.conversation-name {\n  font-weight: 600;\n  color: var(--color-text-primary);\n}\n\n.conversation-preview {\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.conversation-meta {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: var(--spacing-2);\n}\n\n.conversation-time {\n  font-size: 0.75rem;\n  color: var(--color-text-secondary);\n}\n\n.unread-badge {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 20px;\n  height: 20px;\n  padding: 0 6px;\n  background: var(--color-primary);\n  color: white;\n  border-radius: var(--radius-full);\n  font-size: 0.75rem;\n  font-weight: 700;\n}\n\n.conversation-panel {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.no-conversation {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: var(--spacing-8);\n}\n\n.empty-icon {\n  font-size: 4rem;\n  margin-bottom: var(--spacing-4);\n}\n\n.conversation-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-4);\n  background: var(--color-bg-elevated);\n  border-bottom: 2px solid var(--color-border);\n}\n\n.header-info {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-3);\n}\n\n.participant-avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.participant-name {\n  font-weight: 700;\n  color: var(--color-text-primary);\n}\n\n.participant-status {\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n}\n\n.typing-indicator {\n  color: var(--color-primary);\n  font-style: italic;\n}\n\n.header-actions {\n  display: flex;\n  gap: var(--spacing-2);\n}\n\n.btn-icon {\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--color-bg-secondary);\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  font-size: 1.25rem;\n  transition: all 0.2s;\n}\n\n.btn-icon:hover {\n  background: var(--color-primary);\n  transform: scale(1.1);\n}\n\n.messages-thread {\n  flex: 1;\n  overflow-y: auto;\n  padding: var(--spacing-4);\n  background: var(--color-bg-primary);\n}\n\n.messages-list {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-3);\n}\n\n.message-item {\n  display: flex;\n  gap: var(--spacing-3);\n  align-items: flex-start;\n}\n\n.message-item.own {\n  flex-direction: row-reverse;\n}\n\n.message-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  object-fit: cover;\n  flex-shrink: 0;\n}\n\n.message-bubble {\n  max-width: 70%;\n  padding: var(--spacing-3) var(--spacing-4);\n  background: var(--color-bg-elevated);\n  border-radius: var(--radius-lg);\n}\n\n.message-item.own .message-bubble {\n  background: var(--color-primary);\n  color: white;\n}\n\n.message-text {\n  line-height: 1.5;\n  word-wrap: break-word;\n}\n\n.message-attachment {\n  margin-top: var(--spacing-2);\n}\n\n.attachment-image {\n  max-width: 100%;\n  border-radius: var(--radius-md);\n}\n\n.message-time {\n  margin-top: var(--spacing-2);\n  font-size: 0.75rem;\n  opacity: 0.7;\n}\n\n.edited-label {\n  font-style: italic;\n}\n\n.typing-bubble {\n  display: flex;\n  gap: var(--spacing-3);\n  align-items: center;\n}\n\n.typing-dots {\n  display: flex;\n  gap: 4px;\n  padding: var(--spacing-3) var(--spacing-4);\n  background: var(--color-bg-elevated);\n  border-radius: var(--radius-lg);\n}\n\n.typing-dots span {\n  width: 8px;\n  height: 8px;\n  background: var(--color-text-secondary);\n  border-radius: 50%;\n  animation: typing 1.4s infinite;\n}\n\n.typing-dots span:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.typing-dots span:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes typing {\n  0%, 60%, 100% {\n    transform: translateY(0);\n  }\n  30% {\n    transform: translateY(-10px);\n  }\n}\n\n.message-input-container {\n  display: flex;\n  gap: var(--spacing-3);\n  padding: var(--spacing-4);\n  background: var(--color-bg-elevated);\n  border-top: 2px solid var(--color-border);\n}\n\n.btn-attach,\n.btn-send {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--color-bg-secondary);\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  font-size: 1.25rem;\n  transition: all 0.2s;\n}\n\n.btn-send {\n  background: var(--color-primary);\n}\n\n.btn-send:hover:not(:disabled) {\n  transform: scale(1.1);\n}\n\n.btn-send:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.message-input {\n  flex: 1;\n  padding: var(--spacing-3);\n  border: 2px solid var(--color-border);\n  border-radius: var(--radius-md);\n  font-family: inherit;\n  font-size: 1rem;\n  background: var(--color-bg-primary);\n  color: var(--color-text-primary);\n  resize: none;\n  max-height: 120px;\n}\n\n.message-input:focus {\n  outline: none;\n  border-color: var(--color-primary);\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: var(--color-bg-elevated);\n  border-radius: var(--radius-lg);\n  width: 90%;\n  max-width: 500px;\n  box-shadow: var(--shadow-lg);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-4);\n  border-bottom: 2px solid var(--color-border);\n}\n\n.modal-header h3 {\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: var(--color-text-primary);\n}\n\n.btn-close {\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: transparent;\n  border: none;\n  font-size: 2rem;\n  cursor: pointer;\n  color: var(--color-text-secondary);\n}\n\n.modal-body {\n  padding: var(--spacing-6);\n}\n\n.username-input {\n  width: 100%;\n  padding: var(--spacing-3);\n  border: 2px solid var(--color-border);\n  border-radius: var(--radius-md);\n  font-size: 1rem;\n  background: var(--color-bg-primary);\n  color: var(--color-text-primary);\n}\n\n.modal-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--spacing-3);\n  padding: var(--spacing-4);\n  border-top: 2px solid var(--color-border);\n}\n\n.btn-primary,\n.btn-secondary {\n  padding: var(--spacing-3) var(--spacing-6);\n  border-radius: var(--radius-md);\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n  border: none;\n}\n\n.btn-primary {\n  background: var(--color-primary);\n  color: white;\n}\n\n.btn-secondary {\n  background: transparent;\n  color: var(--color-primary);\n  border: 2px solid var(--color-primary);\n}\n\n.loading-container {\n  text-align: center;\n  padding: var(--spacing-8);\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  margin: 0 auto;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n.empty-conversations,\n.empty-messages {\n  text-align: center;\n  padding: var(--spacing-8);\n  color: var(--color-text-secondary);\n}\n\n@media (max-width: 768px) {\n  .messages-container {\n    grid-template-columns: 1fr;\n  }\n  \n  .conversations-panel {\n    display: none;\n  }\n  \n  .conversations-panel.show-mobile {\n    display: flex;\n  }\n  \n  .message-bubble {\n    max-width: 85%;\n  }\n}\n</style>\n"],"names":["props","__props","useRoute","router","useRouter","authStore","useAuthStore","conversations","ref","messages","activeConversationId","conversationSearch","messageText","loadingConversations","loadingMessages","isTyping","showNewMessageModal","newMessageUsername","messagesContainer","pollInterval","typingTimeout","filteredConversations","computed","search","c","_a","activeConversation","formatTime","dateString","date","diffMs","diffMins","diffHours","diffDays","formatMessageTime","loadConversations","response","apiClient","err","loadMessages","msg","nextTick","scrollToBottom","markAsRead","selectConversation","conversationId","sendMessage","newMessage","conv","_b","handleTyping","startNewConversation","newConv","deleteConversation","viewProfile","attachFile","startPolling","lastMessageId","newMessages","stopPolling","watch","newId","onMounted","onUnmounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","$t","_hoisted_5","$event","_hoisted_7","_cache","_hoisted_8","_hoisted_9","_Fragment","_renderList","conversation","_normalizeClass","_hoisted_11","_hoisted_13","_hoisted_14","_hoisted_15","_toDisplayString","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_22","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","message","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_37","_createTextVNode","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_21","_hoisted_43","_hoisted_44","_hoisted_45"],"mappings":"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"}